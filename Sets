s = set([1, 2, 3, 4, 5, 6, 7, 8, 9])

.discard() 	# Same as the .remove but it just doesn’t raise a KeyError when the element is not in the set
.remove()
.pop()
.add()	# Doesn’t add an existing item again

These all return None





# Instead of writing
a = input().split() 
if a[0] == “remove”: 
s.remove(int(a[1]))
elif a[0] == “pop”:
	s.pop(int(a[1])


# Write 1
n = int(input())
s = set(map(int, input().split()))
for i in range(int(input())):
    eval('s.{0}({1})'.format(*input().split() + ['']))
print(sum(s))


# Write 2
len_A = int(input())
A = set(map(int, input().split()))
_ = int(input())
for i in range(_):
    eval("A.{0}({1})".format(input().split()[0], list(map(int, input().split()))))
print(sum(A))


# Write 3 
(_, A) = (int(input()),set(map(int, input().split())))
B = int(input())
for _ in range(B):
 (command, newSet) = (input().split()[0],set(map(int, input().split())))
getattr(A, command)(newSet)

print (sum(A))





"""

https://www.hackerrank.com/challenges/py-the-captains-room/problem

5
1 2 3 6 5 4 4 2 5 3 6 1 6 5 3 2 4 1 2 5 1 4 3 6 8 4 3 1 5 6 2
Each number in {1, 2, 3, 4, 5, 6, 8} has K - 1 other themselves (totally K of them) except the number 8 (it is the only one)
sum that number set and then multiple with K
Then substract the sum of original list from that 
At the end, what you get is K * 8 
By applying floor division to is with K -1, we can find the number 8 
(K * 8) // (K – 1)
Note: the number 8 is the unknown that we are trying to find

"""

K = int(input())
number_set = list(map(int, input().split()))
print(((sum(set(number_set)) * K - sum(number_set)) // (K - 1)))


""" Continued 
Sort the list of room numbers  t
Then split that list into two sets with one containing the even elements and the other the odd elements
Since the number of members in a group, K, will always be greater than 1 each set contained the same room numbers except for the set that contained the captain's room
From there, take the symmetric difference of both sets to get the captain's room
Sorting takes minimum O(nlogn); therefore, it is slower

"""

K = int(input())
rooms = input().split()
rooms.sort()    # ['1', '1', '1', '1', '1', '2', '2', '2', '2', '2', '3', '3', '3', '3', '3', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '6', '6', '6', '6', '6', '8']
capt_room = (set(rooms[0::2]) ^ set(rooms[1::2]))
print(capt_room.pop())


# Its shorter version
_, a = input(), input().split()
a.sort()
print((set(a[0::2]) ^ set(a[1::2])).pop())


# Even shorter
s = sorted([input().split() for _ in range(2)][1])
print((set(s[0::2]) ^ set(s[1::2])).pop())


# By removing
K = int(input())
num_list = list(map(int, input().split(' ')))
num_set = set(num_list)
for i in num_set:
    num_list.remove(i)
    if i not in num_list:
        print(i)
        break







