#### 1 ####
### TASK ###
Given an integer, n, perform the following conditional actions:

If n is odd, print Weird
If n is even and in the inclusive range of 2 to 5, print Not Weird
If n is even and in the inclusive range of 6 to 20, print Weird
If n is even and greater than 20, print Not Weird


### MY CODE
if __name__ == '__main__':                        # it means name == 'main' In python single equal signs are reserved for variable assignment 
                                                  # so a variable assignment is as so : name = 'John'
                                                  # it means that if the of the file or the file name is equal to 'main' then it returns true else false
    n = int(input().strip())
    
if n%2==1:
    print("Weird")
elif 2 <= n <= 5:
    print("Not Weird")
elif 6 <= n <= 20:
    print("Weird")
else:
    print("Not Weird")





n = int(input().strip())                          # We just take the input, remove any excess whitespace and store the integer in a variable
check = {True: "Not Weird", False: "Weird"}       # We define a dictionary with boolean values as keys

print( check [n%2==0 and (n in range(2,6) or n > 20)] )

# Checking if the input number is even. If it isn't, the expression will automatically return False,
# the dictionary outputs Weird and the print function prints the string on the console
# If the input number is indeed even, we then check if it's in the range from 2 to 6 or if it's more than 20 
# If either of these are true, the expression returns True, the dictionary outputs "Not Weird" and that will be printed on the screen. 
# If neither of these expressions are true, the expression returns False; thus, "Weird"





n = int(raw_input())    # We use rawinput() function to get input from user

if n%2==0 and (n in range(2,6) or n>20 ):
    print "Not",
print "Weird"






#### 2 ####
a, b = int(input()), int(input())

print('{0} \n{1} \n{2}'.format((a + b), (a - b), (a * b)))

# Or you can also use this:     print('{:d}\n{:d}\n{:d}'.format(a+b,a-b,a*b))



a, b = int(input()), int(input())
print((a + b), (a - b), (a * b), sep='\n')

# Or you can also use this:     for i in [a+b, a-b, a*b]: print(i)





## ARBITARY ARGUMENT LIST ##

print(*[list])      # This expands a list into a sequence of positional parameters by using the * operator


n = input("Enter:")
for i in range(1,n+1):    
    print(i, sep="", end="")	# OUTPUT: 123456...n
    
# Or you can also use this:	print(*range(1, int(input())+1), sep='')







# While working with booleans, do not try to return True or False statements as in the following

def f():
	if condition:
    	return True
    else:
    	return False

# Every condition already evaluates as a boolean, 3 = 5 is a False and 5 = 5 is a True

def f():
	return condition


# An example for this concept
# Determine whether or not a year is a leap year

## The DRY and efficient way
def is_leap(year):
    return year % 4 == 0 and (year % 400 == 0 or year % 100 != 0)

## Method 2
def is_leap(y):
    return (y%400==0) or (y%100!=0 and y%4==0)


## The WET and inefficient way
def is_leap(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    else:
        return False

## More efficient but still WET code
if year % 4 == 0:
    if year % 100 != 0:
        leap = True
    elif year % 400 == 0:
        leap = True
return leap


